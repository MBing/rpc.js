{"name":"Rpc.js","body":"<img src=\"http://i.imgur.com/DNNlN.png\" width=\"800\" border = \"0\"/>\r\n\r\nrpc.js is a simple and lightweight JSON-RPC gateway for Node.JS.\r\n\r\nYou can use it standalone (without any dependecy) or integrate in your favorite framework (tested with flatiron and express)\r\n\r\n\r\n## Main Features\r\n- Simple, lightweight and fast\r\n- Schema based\r\n- Auto API documentation and interactive tests\r\n\r\n\r\n## Try it now!\r\n\r\n```bash\r\ngit clone https://hugorodrigues@github.com/hugorodrigues/rpc.js.git\r\ncd rpc.js/examples/standalone\r\nnode example.js\r\n```\r\nGoto http://localhost:3000/help.html\r\n\r\n\r\n\r\n\r\n\r\n## Declaring Methods\r\n\r\n**Method declaration structure**\r\n\r\n```js\r\nmethodName: {\r\n\tinfo: 'Description of your method',\r\n\tparams: {\r\n\t\tparamFoo: { required: true, type: 'number', info: 'Description of paramFoo'},\r\n\t\tparamBar: { required: false, type: 'string', info: 'Description of paramBar'}\r\n\t},\r\n\taction: function(params,output)\r\n\t{\r\n\t\t// Do your stuff here\r\n\t\t// You can use the params: params.paramFoo params.paramBar\r\n\t\t// When ready output with: output.win(result);\r\n\r\n\t}\r\n},\r\n```\r\n\r\n**Example method that sum two numbers:**\r\n\r\n```js\r\nsum: {\r\n\tinfo: 'Sum two numbers',\r\n\tparams: {\r\n\t\tx: { required: true, type: 'number', info: 'X value'},\r\n\t\ty: { required: true, type: 'number', info: 'Y value'}\r\n\t},\r\n\taction: function(params,output)\r\n\t{\r\n\t\tvar result = parseInt(params.x) + parseInt(params.y);\r\n\t\toutput.win(result);\r\n\t}\r\n},\r\n```\r\n\r\n## Output\r\n\r\nWhen coding inside the action you can output successful responses:\r\n```js\r\noutput.win(\"Hello World\");\r\n```\r\nOr error outputs:\r\n```js\r\n output.fail(403, \"Invalid API Key\");\r\n```\r\n\r\n\r\n## Full Example\r\n\r\nCheck the file /examples/example.schema.js for the schema used in the demo API and Screenshot\r\n\r\n\r\n\r\n\r\n## Example using with Flatiron\r\n\r\n```js\r\n\r\nvar flatiron = require('flatiron'),\r\n    app = flatiron.app;\r\n\r\n\r\n// include rpc.js\r\nvar rpc = require('../../rpc.js');\r\nrpc.schema = require('../example.schema.js');\r\n\r\n\r\napp.use(flatiron.plugins.http);\r\n\r\napp.router.post('/', function () {\r\n\t// Send request to rpc.js\r\n\trpc.input(this.req.body.rpc,this.res);\r\n});\r\n\r\n// Serv UI static file\r\napp.router.get('/help.html', function () {\r\n\tvar self = this;\r\n\trequire('fs').readFile(\"../../ui/help.html\", function(error, content) { self.res.writeHead(200, { 'Content-Type': 'text/html' }); self.res.end(content, 'utf-8'); });\r\n});\r\n\r\napp.start(3000);\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n## Example using with Express\r\n\r\n```js\r\n\r\n // include rpc.js\r\nvar rpc = require('rpc.js');\r\n\r\n// load your API schema\r\nrpc.schema = require('yourApi.schema.js');\r\n\r\n // include express\r\nvar express = require('express');\r\nvar app = module.exports = express.createServer();\r\n\r\n// Express Configuration\r\napp.configure(function(){\r\n  app.use(express.bodyParser());\r\n  app.use(express.static('../../ui/'));\r\n  app.use(express.errorHandler()); \r\n});\r\n\r\napp.post('/', function(req, res){\r\n\t// Send request to rpc.js\r\n\trpc.input(req.body.rpc,res);  \r\n});\r\n\r\n\r\napp.listen(3000);\r\nconsole.log(\"Express server listening on port %d in %s mode\", app.address().port, app.settings.env);\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n## License \r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2012, Hugo Rodrigues <correio@hugorodrigues.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.","tagline":"Elegant JSON-RPC for node.js","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}